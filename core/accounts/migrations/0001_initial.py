# Generated by Django 4.0.6 on 2023-07-10 06:54

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import macaddress.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('master', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_suspended', models.BooleanField(default=False)),
                ('is_social', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='IssuePriority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(max_length=100)),
                ('position', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='IssueType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(max_length=100)),
                ('position', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.IntegerField()),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('work_number_1', models.CharField(blank=True, max_length=10, null=True)),
                ('work_number_2', models.CharField(blank=True, max_length=10, null=True)),
                ('cell_number', models.CharField(blank=True, max_length=10, null=True)),
                ('is_work_numer_1_valid', models.BooleanField(default=False)),
                ('type_of_account', models.IntegerField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_pictures')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='cover_pictures')),
                ('brokerage_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sales_persones_license', models.CharField(blank=True, max_length=100, null=True)),
                ('agent_broker_license_title', models.CharField(blank=True, max_length=100, null=True)),
                ('create_team', models.BooleanField(blank=True, null=True)),
                ('team_name', models.CharField(blank=True, max_length=50, null=True)),
                ('languages', models.JSONField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('tiktok_url', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('personal_bio', models.TextField(blank=True, null=True)),
                ('is_profilepassword', models.BooleanField(blank=True, null=True)),
                ('profile_password', models.CharField(blank=True, max_length=10, null=True)),
                ('name_of_business_listing', models.CharField(blank=True, max_length=100, null=True)),
                ('business_id', models.CharField(blank=True, max_length=50, null=True)),
                ('addition_user', models.CharField(blank=True, max_length=50, null=True)),
                ('number_user', models.IntegerField(blank=True, null=True)),
                ('address_line_1', models.CharField(blank=True, max_length=100, null=True)),
                ('address_line_2', models.CharField(blank=True, max_length=100, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=255, null=True)),
                ('nickname', models.CharField(max_length=255)),
                ('unique_id', models.CharField(blank=True, max_length=255, null=True)),
                ('listing_count', models.PositiveIntegerField(default=0)),
                ('rating', models.PositiveIntegerField(default=0)),
                ('areamaster', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='master.areamaster')),
                ('citymaster', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='master.citymaster')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='master.statemaster')),
                ('user_type', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.usertype')),
            ],
        ),
        migrations.CreateModel(
            name='User_Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.BooleanField(default=False)),
                ('date_time', models.DateTimeField()),
                ('ip_address', models.GenericIPAddressField()),
                ('longitude', models.CharField(max_length=50)),
                ('latitude', models.CharField(max_length=50)),
                ('mac_address', macaddress.fields.MACAddressField(integer=True)),
                ('location', models.TextField()),
                ('user_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.usertype')),
            ],
        ),
        migrations.CreateModel(
            name='SupportTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_no', models.CharField(max_length=10, unique=True)),
                ('issue_type', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('priority', models.CharField(max_length=50)),
                ('image', models.FileField(blank=True, null=True, upload_to='supportticket')),
                ('status', models.BooleanField(blank=True, null=True)),
                ('is_request', models.BooleanField(default=True)),
                ('reported_date', models.DateField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Nb_specality_area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_id', models.JSONField(blank=True, null=True)),
                ('doc1', models.FileField(blank=True, null=True, upload_to='nb_sp_area')),
                ('doc2', models.FileField(blank=True, null=True, upload_to='nb_sp_area')),
                ('doc3', models.FileField(blank=True, null=True, upload_to='nb_sp_area')),
                ('is_requested', models.BooleanField(default=False)),
                ('is_verified', models.CharField(blank=True, choices=[('Approve', 'Approve'), ('Reject', 'Reject'), ('Pending', 'Pending')], default='Pending', max_length=256, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='min_30',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Monday', models.JSONField(blank=True, null=True)),
                ('Tuesday', models.JSONField(blank=True, null=True)),
                ('Wednesday', models.JSONField(blank=True, null=True)),
                ('Thursday', models.JSONField(blank=True, null=True)),
                ('Friday', models.JSONField(blank=True, null=True)),
                ('Saturday', models.JSONField(blank=True, null=True)),
                ('Sunday', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('userprofile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_name', models.CharField(blank=True, max_length=255, null=True)),
                ('card_number', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('cvc', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('First_Name', models.CharField(blank=True, max_length=255, null=True)),
                ('Last_Name', models.CharField(blank=True, max_length=255, null=True)),
                ('Phone_number', models.IntegerField(blank=True, null=True)),
                ('Address1', models.CharField(blank=True, max_length=255, null=True)),
                ('Address2', models.CharField(blank=True, max_length=255, null=True)),
                ('zipcodeid', models.CharField(blank=True, max_length=256, null=True)),
                ('Total_amount', models.IntegerField(blank=True, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('card_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.card')),
                ('cityid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='master.citymaster')),
                ('stateid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='master.statemaster')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AgentLic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(blank=True, max_length=255, null=True)),
                ('Full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_validated', models.BooleanField(default=False)),
                ('is_requested', models.BooleanField(default=False)),
                ('lic_already_use', models.BooleanField(default=False)),
                ('lic_Type', models.CharField(blank=True, max_length=255, null=True)),
                ('brokerage_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_rejected', models.BooleanField(blank=True, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AgentApprovedSubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_date', models.DateField(blank=True, null=True)),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('next_billing_date', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(default=True)),
                ('plan_choices', models.CharField(blank=True, max_length=50, null=True)),
                ('plan_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='master.subscriptionplanservices')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_allowed', models.IntegerField(blank=True, null=True)),
                ('email_notification', models.BooleanField(default=False)),
                ('text_notification', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
